{
  "contractName": "PocketSwapFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pocketAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldFeeSetter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFeeSetter",
          "type": "address"
        }
      ],
      "name": "FeeSetterUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "FeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pocketAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAIR_INIT_CODE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeSetter",
          "type": "address"
        }
      ],
      "name": "setFeeSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "holdersFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pocketAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldFeeSetter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFeeSetter\",\"type\":\"address\"}],\"name\":\"FeeSetterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PAIR_INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pocketAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeSetter\",\"type\":\"address\"}],\"name\":\"setFeeSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/pocketswap/PocketSwapFactory.sol\":\"PocketSwapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/contracts/pocketswap/PocketSwapERC20.sol\":{\"keccak256\":\"0x8b3d6bbdac817382be8ccf37e0cc269b83af9df2e184c7efeb08397cef338388\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://00583f08f1218ab4984763e7f5a06de8f93559ad391523ae39fcc09416574dfa\",\"dweb:/ipfs/QmP3paCa6mBMTr5Zdg9qYNPnMdZqioCpiRnJLwBn6Xx9FL\"]},\"project:/contracts/pocketswap/PocketSwapFactory.sol\":{\"keccak256\":\"0xa7a9fddba70001f7963324c219f6981f94ef42dcc6367eff3bc23f5ce4230dc7\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://863d560a41c295cc36f427269e8abae208b199168e933ab4da796d5d125b8e9b\",\"dweb:/ipfs/QmZbZZY72UoDJiAyjdF74y5AkraprpsVBV5DQhNipLPbzV\"]},\"project:/contracts/pocketswap/PocketSwapPair.sol\":{\"keccak256\":\"0x7adda281950a3fd2a7fce7b7ebbd553d24d1e35dba5ba22493f3ce51edb24802\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://903d2f67a67fe00eb922f3deaad271850df9506e3a4b5607160b262547d1a28d\",\"dweb:/ipfs/QmSE1EZ57vCKcM5LS4R5hG7dGerQCEVnswXssKxUPbXCK2\"]},\"project:/contracts/pocketswap/interfaces/IPocketSwapERC20.sol\":{\"keccak256\":\"0xa3e3f80fee242aef9d4c9e5d25e742e6f64a3754463b117b91c24b6248fc9b03\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://dd312ca9009212287c373d8c1a84b816b208e8ff0e07c5b9ee1d200673e6cec7\",\"dweb:/ipfs/QmdiTjnPZUFZ1Qqrx5fEvGZWUEhbGNQ1tfwYwpJsun4udv\"]},\"project:/contracts/pocketswap/interfaces/IPocketSwapFactory.sol\":{\"keccak256\":\"0xa8e014fc7bd938109e306743ef84b68525759aad88882af360341089217292e7\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://82b6513656a2cc49eb37685cad91fe6c6fa1532667e29adbfd39721547a38486\",\"dweb:/ipfs/QmQN5VGH63arbrEMqHswTCuRXYoWb3fkoWA2t3BkSbEYLJ\"]},\"project:/contracts/pocketswap/interfaces/IPocketSwapPair.sol\":{\"keccak256\":\"0xbd2242a42f5c3c7651de1de624a4dbe74969d34d8d916e759622dfc39a22837d\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://77d4114d6416b157790998bfbddd88daa8446bce284d0f1c39b490a1946db186\",\"dweb:/ipfs/QmX9dbFq8MfXm5nNXFHTTBfn6NXeGFAN2HQgEnEb9dJfsK\"]},\"project:/contracts/pocketswap/interfaces/callback/IPocketSwapCallback.sol\":{\"keccak256\":\"0xffbcd8cdb9c7d99b074a3ae0910741cd15299ca3e8b839bd1fc6e603f41b7416\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ba374100d9322737f1b0d77967d2ea7efb0aca8c699977cbe288de1e81d93f15\",\"dweb:/ipfs/QmSfUvwjqGPHfdRWVazC2QgsJFc3LDrhykQ2tbccDr3Dhv\"]},\"project:/contracts/pocketswap/libraries/Math.sol\":{\"keccak256\":\"0xa64bfc3a224b8bc01276b994681e91a99b0de6885ace74cd68b27db9f9495eb6\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://fc1f1d7029bce63a1c6e04126f2a9232bf91ee5d6fd6cc3e093255d1c6fe1d89\",\"dweb:/ipfs/QmPAQbm2rXEtC1jc7tUeZ6aX5f45FrBy3rxVBat1DDnxjv\"]},\"project:/contracts/pocketswap/libraries/PairAddress.sol\":{\"keccak256\":\"0x6aac8cd8b94fada98c7ead28d70cbcaa14688abf19c4f6c581e4c7cf7f21a6d0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://62544a86c184802067b904a5783e4900a112722a0b3214fb7ae4f6c7b9713290\",\"dweb:/ipfs/QmUEtX8oVJdc9ANyXfZWr7jPfin7YtCQ17Zv1BmpFSrh2e\"]},\"project:/contracts/pocketswap/libraries/PlainMath.sol\":{\"keccak256\":\"0xff3e367ace2eb88aa9f762a0a3817dcf81306f8e5176b407093306c3502ff507\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://6df7ef0bc91525818d58560194c7af05fac49eaccf8cf7252f788bf58d8bca5f\",\"dweb:/ipfs/QmYiHJwFEguwEamcJivtCkfXUZpiZDhUjaBxgjHWY88akT\"]},\"project:/contracts/pocketswap/libraries/UQ112x112.sol\":{\"keccak256\":\"0xcb95f28dce1327158af80a3ffcfacaa608617afbffd4c7991f236117124698bf\",\"urls\":[\"bzz-raw://90fb6358954f295bc1b3dfe9cbc875c1da16e48c48f54028ad817dadbe3600d7\",\"dweb:/ipfs/QmfKtQdwxkmTBMU38NDsB2eGZeFDYhzodDH6JDN3rL4WJ1\"]},\"project:/contracts/pocketswap/pair/StorageData.sol\":{\"keccak256\":\"0x5b807e9db8d75c8c64a46f3970c4683b01694503c4826276250ce2101a763ef6\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://eed0785fe951a00871b092bf86e26a8895ce8b936386a44e548932aa37e79e7c\",\"dweb:/ipfs/QmeDbGTF1zHD9sg3hwa2LaUdgWBi6CVUVewZuXP3AbKwQ4\"]}},\"version\":1}",
  "bytecode": "0x60a0604052622dc6c060015534801561001757600080fd5b506040516145833803806145838339810160408190526100369161005f565b60008054336001600160a01b031990911617905560601b6001600160601b03191660805261008d565b600060208284031215610070578081fd5b81516001600160a01b0381168114610086578182fd5b9392505050565b60805160601c6144d86100ab600039600061017e01526144d86000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806387cf3ef411610081578063c9c653961161005b578063c9c65396146101a0578063ddca3f43146101b3578063e6a43905146101bc57600080fd5b806387cf3ef414610146578063b19805af14610166578063b8cb1c351461017957600080fd5b8063574f2ba3116100b2578063574f2ba31461012157806357b84f8c1461012957806369fe0e2d1461013157600080fd5b80631e3dd18b146100ce57806346870d2b1461010b575b600080fd5b6100e16100dc366004610cf1565b6101fd565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610113610234565b604051908152602001610102565b600354610113565b610113610256565b61014461013f366004610cf1565b6102c3565b005b6000546100e19073ffffffffffffffffffffffffffffffffffffffff1681565b610144610174366004610c86565b6103fb565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b6100e16101ae366004610ca7565b610517565b61011360015481565b6100e16101ca366004610ca7565b600260209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b6003818154811061020d57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000601e60015460056102479190610d7b565b6102519190610d42565b905090565b60006040518060200161026890610c50565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526102a89190602001610d09565b60405160208183030381529060405280519060200120905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a464f5242494444454e00000000000000000000000060448201526064015b60405180910390fd5b670de0b6b3a764000081106103ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a4249475f46454500000000000000000000000000006044820152606401610340565b60015460408051918252602082018390527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910160405180910390a1600155565b60005473ffffffffffffffffffffffffffffffffffffffff16331461047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a464f5242494444454e0000000000000000000000006044820152606401610340565b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527f83b887657b0e2cbbed6d7b9468d78fe27ce257d950e1c7e36572b3a24f82e41c910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f506f636b6574537761703a4944454e544943414c5f41444452455353455300006044820152606401610340565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106105ec5783856105ef565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff8216610671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f506f636b6574537761703a5a45524f5f414444524553530000000000000000006044820152606401610340565b73ffffffffffffffffffffffffffffffffffffffff82811660009081526002602090815260408083208585168452909152902054161561070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f506f636b6574537761703a504149525f455849535453000000000000000000006044820152606401610340565b60006040518060200161071f90610c50565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561082857600080fd5b505af115801561083c573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff80861660008181526002602081815260408084208a8716855282528084208054968d167fffffffffffffffffffffffff0000000000000000000000000000000000000000978816811790915592825280842094845293905291812080548416831790556003805460018101825591527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018054909216179055506108f9308585610a91565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461098d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f57575a00000000000000000000000000000000000000000000000000000000006044820152606401610340565b610998308486610a91565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610a2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f57575a00000000000000000000000000000000000000000000000000000000006044820152606401610340565b6003546040805173ffffffffffffffffffffffffffffffffffffffff88811682526020820193909352828616928716917f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610ad0578385610ad3565b84845b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b16603482015291935091508690604801604051602081830303815290604052805190602001208773ffffffffffffffffffffffffffffffffffffffff166357b84f8c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7257600080fd5b505afa158015610b86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baa9190610cd9565b6040517fff00000000000000000000000000000000000000000000000000000000000000602082015260609390931b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602184015260358301919091526055820152607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209695505050505050565b6136c580610dde83390190565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c8157600080fd5b919050565b600060208284031215610c97578081fd5b610ca082610c5d565b9392505050565b60008060408385031215610cb9578081fd5b610cc283610c5d565b9150610cd060208401610c5d565b90509250929050565b600060208284031215610cea578081fd5b5051919050565b600060208284031215610d02578081fd5b5035919050565b60008251815b81811015610d295760208186018101518583015201610d0f565b81811115610d375782828501525b509190910192915050565b600082610d76577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dd8577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50029056fe60806040526001600b5534801561001557600080fd5b50604080518082018252600a8152690506f636b6574537761760b41b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f139f1c71b7c3168b7aeac519a0d6ee819b7e7428c66952642d99299cb2a31352818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b031916331790556135bd806101086000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80636a627842116100ee578063ba9a7a5611610097578063d21220a711610071578063d21220a714610487578063d505accf146104a7578063dd62ed3e146104ba578063fff6cae9146104e557600080fd5b8063ba9a7a561461044b578063bc25cf7714610454578063c45a01551461046757600080fd5b806389afcb44116100c857806389afcb44146103d457806395d89b41146103fc578063a9059cbb1461043857600080fd5b80636a6278421461038157806370a08231146103945780637ecebe00146103b457600080fd5b806323b872dd1161015b5780633644e515116101355780633644e51514610353578063485cc9551461035c5780635909c0d51461036f5780635a3d54931461037857600080fd5b806323b872dd146102ff57806330adf81f14610312578063313ce5671461033957600080fd5b8063095ea7b31161018c578063095ea7b3146102805780630dfe1681146102a357806318160ddd146102e857600080fd5b8063022c0d9f146101b357806306fdde03146101c85780630902f1ac1461021a575b600080fd5b6101c66101c1366004613269565b6104ed565b005b6102046040518060400160405280600a81526020017f506f636b6574537761700000000000000000000000000000000000000000000081525081565b6040516102119190613316565b60405180910390f35b600a54604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff1690820152606001610211565b61029361028e3660046131b8565b610dd9565b6040519015158152602001610211565b6006546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610211565b6102f160005481565b604051908152602001610211565b61029361030d366004613103565b610def565b6102f17f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610341601281565b60405160ff9091168152602001610211565b6102f160035481565b6101c661036a3660046130cb565b610ec8565b6102f160085481565b6102f160095481565b6102f161038f366004613093565b610f9c565b6102f16103a2366004613093565b60016020526000908152604090205481565b6102f16103c2366004613093565b60046020526000908152604090205481565b6103e76103e2366004613093565b611345565b60408051928352602083019190915201610211565b6102046040518060400160405280600781526020017f50532d504149520000000000000000000000000000000000000000000000000081525081565b6102936104463660046131b8565b6117ef565b6102f16103e881565b6101c6610462366004613093565b6117fc565b6005546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b6007546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b6101c66104b5366004613143565b6119ce565b6102f16104c83660046130cb565b600260209081526000928352604080842090915290825290205481565b6101c6611cb9565b600b5460011461055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b4544000000000000000000000000000060448201526064015b60405180910390fd5b6000600b55841515806105715750600084115b6105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f506f636b6574537761703a20494e53554646494349454e545f4f55545055545f60448201527f414d4f554e5400000000000000000000000000000000000000000000000000006064820152608401610555565b600080610659600a546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b5091509150816dffffffffffffffffffffffffffff168710801561068c5750806dffffffffffffffffffffffffffff1686105b610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54590000000000000000000000000000000000000000000000000000000000006064820152608401610555565b600654600754600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061077d57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b6107e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f506f636b6574537761703a20494e56414c49445f544f000000000000000000006044820152606401610555565b8a156107f4576107f4828a8d611ea3565b891561080557610805818a8c611ea3565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a082319060240160206040518083038186803b15801561086a57600080fd5b505afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190613251565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a082319060240160206040518083038186803b15801561090a57600080fd5b505afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190613251565b92505050600089856dffffffffffffffffffffffffffff16610964919061344f565b8311610971576000610995565b61098b8a6dffffffffffffffffffffffffffff871661344f565b610995908461344f565b905060006109b38a6dffffffffffffffffffffffffffff871661344f565b83116109c05760006109e4565b6109da8a6dffffffffffffffffffffffffffff871661344f565b6109e4908461344f565b905060008211806109f55750600081115b610a81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f506f636b6574537761703a20494e53554646494349454e545f494e5055545f4160448201527f4d4f554e540000000000000000000000000000000000000000000000000000006064820152608401610555565b600554604080517fddca3f43000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163ddca3f43916004808301926020929190829003018186803b158015610aec57600080fd5b505afa158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190613251565b90506000610b49610b358584612043565b610b4388633b9aca00612043565b90612056565b90506000610b5a610b358585612043565b9050610b8b670de0b6b3a7640000610b856dffffffffffffffffffffffffffff8c8116908c16612043565b90612043565b610b958383612043565b1015610bfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f506f636b6574537761703a204b000000000000000000000000000000000000006044820152606401610555565b505087159050610d5957610c1382828d8d612062565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610c7c57600080fd5b505afa158015610c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb49190613251565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291955073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015610d1e57600080fd5b505afa158015610d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d569190613251565b92505b610d6584848888612479565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600b55505050505050505050565b6000610de6338484612755565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14610eb35773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054610e819083612056565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b610ebe8484846127c4565b5060019392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610f49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f506f636b6574537761703a20464f5242494444454e00000000000000000000006044820152606401610555565b6006805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560078054929093169116179055565b6000600b5460011461100a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b819055600a54600654604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808516956e01000000000000000000000000000090950416939273ffffffffffffffffffffffffffffffffffffffff16916370a08231916024808301926020929190829003018186803b1580156110ab57600080fd5b505afa1580156110bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e39190613251565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b15801561115257600080fd5b505afa158015611166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118a9190613251565b905060006111a8836dffffffffffffffffffffffffffff8716612056565b905060006111c6836dffffffffffffffffffffffffffff8716612056565b600054909150806111fd576111e96103e8610b436111e48686612043565b612891565b97506111f860006103e8612901565b611252565b61124f6dffffffffffffffffffffffffffff881661121b8584612043565b61122591906133ba565b6dffffffffffffffffffffffffffff88166112408585612043565b61124a91906133ba565b6129aa565b97505b600088116112e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4d494e54454400000000000000000000000000000000000000000000006064820152608401610555565b6112ec8989612901565b6112f885858989612479565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600b55509395945050505050565b600080600b546001146113b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b819055600a54600654600754604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808616966e010000000000000000000000000000909604169473ffffffffffffffffffffffffffffffffffffffff94851694909316929184916370a0823191602480820192602092909190829003018186803b15801561146157600080fd5b505afa158015611475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114999190613251565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a082319060240160206040518083038186803b15801561150457600080fd5b505afa158015611518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153c9190613251565b306000908152600160205260408120549054919250908061155d8386612043565b61156791906133ba565b9950806115748385612043565b61157e91906133ba565b985060008a1180156115905750600089115b61161c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4255524e454400000000000000000000000000000000000000000000006064820152608401610555565b61162630836129c0565b611631868c8c611ea3565b61163c858c8b611ea3565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a082319060240160206040518083038186803b1580156116a157600080fd5b505afa1580156116b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d99190613251565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8616906370a082319060240160206040518083038186803b15801561174157600080fd5b505afa158015611755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117799190613251565b925061178784848a8a612479565b604080518b8152602081018b905273ffffffffffffffffffffffffffffffffffffffff8d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350505050505050506001600b81905550915091565b6000610de63384846127c4565b600b54600114611868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b55600654600754600a546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff938416939092169161193f918491869161193a916dffffffffffffffffffffffffffff9091169084906370a08231906024015b60206040518083038186803b15801561190257600080fd5b505afa158015611916573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190613251565b611ea3565b600a546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526119c4918391869161193a916e0100000000000000000000000000009091046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8516906370a08231906024016118ea565b50506001600b5550565b42841015611a38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f506f636b6574537761703a2045585049524544000000000000000000000000006044820152606401610555565b60035473ffffffffffffffffffffffffffffffffffffffff8816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611a98836134b7565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001611b399291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611bc2573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611c3d57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611ca3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f506f636b6574537761703a20494e56414c49445f5349474e41545552450000006044820152606401610555565b611cae898989612755565b505050505050505050565b600b54600114611d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b556006546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611e9c9173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015611d9557600080fd5b505afa158015611da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dcd9190613251565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015611e3657600080fd5b505afa158015611e4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6e9190613251565b600a546dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416612479565b6001600b55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611f6a91906132fa565b6000604051808303816000865af19150503d8060008114611fa7576040519150601f19603f3d011682016040523d82523d6000602084013e611fac565b606091505b5091509150818015611fd6575080511580611fd6575080806020019051810190611fd691906131e3565b61203c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f506f636b6574537761703a205452414e534645525f4641494c454400000000006044820152606401610555565b5050505050565b600061204f8284613412565b9392505050565b600061204f828461344f565b600554604080517fb8cb1c35000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163b8cb1c35916004808301926020929190829003018186803b1580156120cd57600080fd5b505afa1580156120e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210591906130af565b905061210f612a71565b1561228b57600554604080517f46870d2b000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916346870d2b916004808301926020929190829003018186803b15801561217f57600080fd5b505afa158015612193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b79190613251565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152909150600090633b9aca0090839073ffffffffffffffffffffffffffffffffffffffff8616906370a082319060240160206040518083038186803b15801561222a57600080fd5b505afa15801561223e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122629190613251565b61226c9190613412565b61227691906133ba565b9050612283838483611ea3565b505050612473565b600080600061229d8888888888612b60565b9250925092506122ae828483611ea3565b73ffffffffffffffffffffffffffffffffffffffff8083169085161060006122d7838684612e5a565b9050600080836122e9576000836122ed565b8260005b6040517f022c0d9f00000000000000000000000000000000000000000000000000000000815260048101839052602481018290523060448201526080606482015260006084820152919350915073ffffffffffffffffffffffffffffffffffffffff88169063022c0d9f9060a401600060405180830381600087803b15801561237557600080fd5b505af1158015612389573d6000803e3d6000fd5b50506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8b1692506370a08231915060240160206040518083038186803b1580156123f257600080fd5b505afa158015612406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242a9190613251565b9250612437888985611ea3565b6040518381527f79708e1c4696e28e3d9319fe13be27a879668880b98fee5d9d458624cfd843b59060200160405180910390a150505050505050505b50505050565b6dffffffffffffffffffffffffffff84118015906124a557506dffffffffffffffffffffffffffff8311155b61250b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a204f564552464c4f570000000000000000000000006044820152606401610555565b600061251c640100000000426134f0565b600a54909150600090612555907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1683613466565b905060008163ffffffff1611801561257c57506dffffffffffffffffffffffffffff841615155b801561259757506dffffffffffffffffffffffffffff831615155b15612665578063ffffffff166125d4856125b08661301c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169061304d565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166125fc9190613412565b6008600082825461260d9190613367565b909155505063ffffffff8116612626846125b08761301c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661264e9190613412565b6009600082825461265f9190613367565b90915550505b600a805463ffffffff84167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8981166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020546127f49082612056565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602052604080822093909355908416815220546128309082613069565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906127b79085815260200190565b600060038211156128f257508060006128ab6002836133ba565b6128b6906001613367565b90505b818110156128ec579050806002816128d181866133ba565b6128db9190613367565b6128e591906133ba565b90506128b9565b50919050565b81156128fc575060015b919050565b60005461290e9082613069565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546129409082613069565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061299e9085815260200190565b60405180910390a35050565b60008183106129b9578161204f565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260409020546129f09082612056565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604081209190915554612a249082612056565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161299e565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b8cb1c356040518163ffffffff1660e01b815260040160206040518083038186803b158015612adc57600080fd5b505afa158015612af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1491906130af565b60065490915073ffffffffffffffffffffffffffffffffffffffff80831691161480612b5a575060075473ffffffffffffffffffffffffffffffffffffffff8281169116145b91505090565b6006546005546040517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820181905284841660248301526000939092849291169063e6a439059060440160206040518083038186803b158015612bde57600080fd5b505afa158015612bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c1691906130af565b9250600073ffffffffffffffffffffffffffffffffffffffff841615612c4c57868911612c435786612c45565b885b9050612d8d565b6007546005546040517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482018190528884166024830152955091169063e6a439059060440160206040518083038186803b158015612cc557600080fd5b505afa158015612cd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cfd91906130af565b9350858811612d0c5785612d0e565b875b905073ffffffffffffffffffffffffffffffffffffffff8416612d8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e6f20504f434b455420706169720000000000000000000000000000000000006044820152606401610555565b600554604080517f46870d2b000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916346870d2b916004808301926020929190829003018186803b158015612df857600080fd5b505afa158015612e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e309190613251565b9050633b9aca00612e418284613412565b612e4b91906133ba565b92505050955095509592505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b158015612ec557600080fd5b505afa158015612ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612efd9190613251565b90506000808573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015612f4857600080fd5b505afa158015612f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f809190613203565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060008086612fb4578383612fb7565b82845b90925090506000612fd6612fcf87633b9aca0061344f565b8b90612043565b90506000612fe48284612043565b9050600061300083612ffa87633b9aca00612043565b90613069565b905061300c81836133ba565b9c9b505050505050505050505050565b60006130476e0100000000000000000000000000006dffffffffffffffffffffffffffff84166133ce565b92915050565b600061204f6dffffffffffffffffffffffffffff83168461337f565b600061204f8284613367565b80516dffffffffffffffffffffffffffff811681146128fc57600080fd5b6000602082840312156130a4578081fd5b813561204f81613562565b6000602082840312156130c0578081fd5b815161204f81613562565b600080604083850312156130dd578081fd5b82356130e881613562565b915060208301356130f881613562565b809150509250929050565b600080600060608486031215613117578081fd5b833561312281613562565b9250602084013561313281613562565b929592945050506040919091013590565b600080600080600080600060e0888a03121561315d578283fd5b873561316881613562565b9650602088013561317881613562565b95506040880135945060608801359350608088013560ff8116811461319b578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156131ca578182fd5b82356131d581613562565b946020939093013593505050565b6000602082840312156131f4578081fd5b8151801515811461204f578182fd5b600080600060608486031215613217578283fd5b61322084613075565b925061322e60208501613075565b9150604084015163ffffffff81168114613246578182fd5b809150509250925092565b600060208284031215613262578081fd5b5051919050565b600080600080600060808688031215613280578081fd5b8535945060208601359350604086013561329981613562565b9250606086013567ffffffffffffffff808211156132b5578283fd5b818801915088601f8301126132c8578283fd5b8135818111156132d6578384fd5b8960208285010111156132e7578384fd5b9699959850939650602001949392505050565b6000825161330c81846020870161348b565b9190910192915050565b602081526000825180602084015261333581604085016020870161348b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000821982111561337a5761337a613504565b500190565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff808416806133ae576133ae613533565b92169190910492915050565b6000826133c9576133c9613533565b500490565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083168185168183048111821515161561340957613409613504565b02949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561344a5761344a613504565b500290565b60008282101561346157613461613504565b500390565b600063ffffffff8381169083168181101561348357613483613504565b039392505050565b60005b838110156134a657818101518382015260200161348e565b838111156124735750506000910152565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156134e9576134e9613504565b5060010190565b6000826134ff576134ff613533565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461358457600080fd5b5056fea264697066735822122066b01b7023e83b5dad73118d64a49cedbd8266677ff0b3e6650af78d10f2fde564736f6c63430008040033a26469706673582212201ebcbf78622f04f4d23edd7255252420ba4dbfc3c321f9df2c7de1e9e1c01ab164736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c806387cf3ef411610081578063c9c653961161005b578063c9c65396146101a0578063ddca3f43146101b3578063e6a43905146101bc57600080fd5b806387cf3ef414610146578063b19805af14610166578063b8cb1c351461017957600080fd5b8063574f2ba3116100b2578063574f2ba31461012157806357b84f8c1461012957806369fe0e2d1461013157600080fd5b80631e3dd18b146100ce57806346870d2b1461010b575b600080fd5b6100e16100dc366004610cf1565b6101fd565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610113610234565b604051908152602001610102565b600354610113565b610113610256565b61014461013f366004610cf1565b6102c3565b005b6000546100e19073ffffffffffffffffffffffffffffffffffffffff1681565b610144610174366004610c86565b6103fb565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b6100e16101ae366004610ca7565b610517565b61011360015481565b6100e16101ca366004610ca7565b600260209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b6003818154811061020d57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000601e60015460056102479190610d7b565b6102519190610d42565b905090565b60006040518060200161026890610c50565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526102a89190602001610d09565b60405160208183030381529060405280519060200120905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a464f5242494444454e00000000000000000000000060448201526064015b60405180910390fd5b670de0b6b3a764000081106103ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a4249475f46454500000000000000000000000000006044820152606401610340565b60015460408051918252602082018390527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910160405180910390a1600155565b60005473ffffffffffffffffffffffffffffffffffffffff16331461047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a464f5242494444454e0000000000000000000000006044820152606401610340565b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527f83b887657b0e2cbbed6d7b9468d78fe27ce257d950e1c7e36572b3a24f82e41c910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f506f636b6574537761703a4944454e544943414c5f41444452455353455300006044820152606401610340565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106105ec5783856105ef565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff8216610671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f506f636b6574537761703a5a45524f5f414444524553530000000000000000006044820152606401610340565b73ffffffffffffffffffffffffffffffffffffffff82811660009081526002602090815260408083208585168452909152902054161561070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f506f636b6574537761703a504149525f455849535453000000000000000000006044820152606401610340565b60006040518060200161071f90610c50565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561082857600080fd5b505af115801561083c573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff80861660008181526002602081815260408084208a8716855282528084208054968d167fffffffffffffffffffffffff0000000000000000000000000000000000000000978816811790915592825280842094845293905291812080548416831790556003805460018101825591527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018054909216179055506108f9308585610a91565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461098d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f57575a00000000000000000000000000000000000000000000000000000000006044820152606401610340565b610998308486610a91565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610a2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f57575a00000000000000000000000000000000000000000000000000000000006044820152606401610340565b6003546040805173ffffffffffffffffffffffffffffffffffffffff88811682526020820193909352828616928716917f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610ad0578385610ad3565b84845b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b16603482015291935091508690604801604051602081830303815290604052805190602001208773ffffffffffffffffffffffffffffffffffffffff166357b84f8c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7257600080fd5b505afa158015610b86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baa9190610cd9565b6040517fff00000000000000000000000000000000000000000000000000000000000000602082015260609390931b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602184015260358301919091526055820152607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209695505050505050565b6136c580610dde83390190565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c8157600080fd5b919050565b600060208284031215610c97578081fd5b610ca082610c5d565b9392505050565b60008060408385031215610cb9578081fd5b610cc283610c5d565b9150610cd060208401610c5d565b90509250929050565b600060208284031215610cea578081fd5b5051919050565b600060208284031215610d02578081fd5b5035919050565b60008251815b81811015610d295760208186018101518583015201610d0f565b81811115610d375782828501525b509190910192915050565b600082610d76577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dd8577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50029056fe60806040526001600b5534801561001557600080fd5b50604080518082018252600a8152690506f636b6574537761760b41b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f139f1c71b7c3168b7aeac519a0d6ee819b7e7428c66952642d99299cb2a31352818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b031916331790556135bd806101086000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80636a627842116100ee578063ba9a7a5611610097578063d21220a711610071578063d21220a714610487578063d505accf146104a7578063dd62ed3e146104ba578063fff6cae9146104e557600080fd5b8063ba9a7a561461044b578063bc25cf7714610454578063c45a01551461046757600080fd5b806389afcb44116100c857806389afcb44146103d457806395d89b41146103fc578063a9059cbb1461043857600080fd5b80636a6278421461038157806370a08231146103945780637ecebe00146103b457600080fd5b806323b872dd1161015b5780633644e515116101355780633644e51514610353578063485cc9551461035c5780635909c0d51461036f5780635a3d54931461037857600080fd5b806323b872dd146102ff57806330adf81f14610312578063313ce5671461033957600080fd5b8063095ea7b31161018c578063095ea7b3146102805780630dfe1681146102a357806318160ddd146102e857600080fd5b8063022c0d9f146101b357806306fdde03146101c85780630902f1ac1461021a575b600080fd5b6101c66101c1366004613269565b6104ed565b005b6102046040518060400160405280600a81526020017f506f636b6574537761700000000000000000000000000000000000000000000081525081565b6040516102119190613316565b60405180910390f35b600a54604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff1690820152606001610211565b61029361028e3660046131b8565b610dd9565b6040519015158152602001610211565b6006546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610211565b6102f160005481565b604051908152602001610211565b61029361030d366004613103565b610def565b6102f17f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610341601281565b60405160ff9091168152602001610211565b6102f160035481565b6101c661036a3660046130cb565b610ec8565b6102f160085481565b6102f160095481565b6102f161038f366004613093565b610f9c565b6102f16103a2366004613093565b60016020526000908152604090205481565b6102f16103c2366004613093565b60046020526000908152604090205481565b6103e76103e2366004613093565b611345565b60408051928352602083019190915201610211565b6102046040518060400160405280600781526020017f50532d504149520000000000000000000000000000000000000000000000000081525081565b6102936104463660046131b8565b6117ef565b6102f16103e881565b6101c6610462366004613093565b6117fc565b6005546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b6007546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b6101c66104b5366004613143565b6119ce565b6102f16104c83660046130cb565b600260209081526000928352604080842090915290825290205481565b6101c6611cb9565b600b5460011461055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b4544000000000000000000000000000060448201526064015b60405180910390fd5b6000600b55841515806105715750600084115b6105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f506f636b6574537761703a20494e53554646494349454e545f4f55545055545f60448201527f414d4f554e5400000000000000000000000000000000000000000000000000006064820152608401610555565b600080610659600a546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b5091509150816dffffffffffffffffffffffffffff168710801561068c5750806dffffffffffffffffffffffffffff1686105b610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54590000000000000000000000000000000000000000000000000000000000006064820152608401610555565b600654600754600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061077d57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b6107e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f506f636b6574537761703a20494e56414c49445f544f000000000000000000006044820152606401610555565b8a156107f4576107f4828a8d611ea3565b891561080557610805818a8c611ea3565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a082319060240160206040518083038186803b15801561086a57600080fd5b505afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190613251565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a082319060240160206040518083038186803b15801561090a57600080fd5b505afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190613251565b92505050600089856dffffffffffffffffffffffffffff16610964919061344f565b8311610971576000610995565b61098b8a6dffffffffffffffffffffffffffff871661344f565b610995908461344f565b905060006109b38a6dffffffffffffffffffffffffffff871661344f565b83116109c05760006109e4565b6109da8a6dffffffffffffffffffffffffffff871661344f565b6109e4908461344f565b905060008211806109f55750600081115b610a81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f506f636b6574537761703a20494e53554646494349454e545f494e5055545f4160448201527f4d4f554e540000000000000000000000000000000000000000000000000000006064820152608401610555565b600554604080517fddca3f43000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163ddca3f43916004808301926020929190829003018186803b158015610aec57600080fd5b505afa158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190613251565b90506000610b49610b358584612043565b610b4388633b9aca00612043565b90612056565b90506000610b5a610b358585612043565b9050610b8b670de0b6b3a7640000610b856dffffffffffffffffffffffffffff8c8116908c16612043565b90612043565b610b958383612043565b1015610bfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f506f636b6574537761703a204b000000000000000000000000000000000000006044820152606401610555565b505087159050610d5957610c1382828d8d612062565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610c7c57600080fd5b505afa158015610c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb49190613251565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291955073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015610d1e57600080fd5b505afa158015610d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d569190613251565b92505b610d6584848888612479565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600b55505050505050505050565b6000610de6338484612755565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14610eb35773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054610e819083612056565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b610ebe8484846127c4565b5060019392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610f49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f506f636b6574537761703a20464f5242494444454e00000000000000000000006044820152606401610555565b6006805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560078054929093169116179055565b6000600b5460011461100a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b819055600a54600654604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808516956e01000000000000000000000000000090950416939273ffffffffffffffffffffffffffffffffffffffff16916370a08231916024808301926020929190829003018186803b1580156110ab57600080fd5b505afa1580156110bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e39190613251565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b15801561115257600080fd5b505afa158015611166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118a9190613251565b905060006111a8836dffffffffffffffffffffffffffff8716612056565b905060006111c6836dffffffffffffffffffffffffffff8716612056565b600054909150806111fd576111e96103e8610b436111e48686612043565b612891565b97506111f860006103e8612901565b611252565b61124f6dffffffffffffffffffffffffffff881661121b8584612043565b61122591906133ba565b6dffffffffffffffffffffffffffff88166112408585612043565b61124a91906133ba565b6129aa565b97505b600088116112e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4d494e54454400000000000000000000000000000000000000000000006064820152608401610555565b6112ec8989612901565b6112f885858989612479565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600b55509395945050505050565b600080600b546001146113b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b819055600a54600654600754604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808616966e010000000000000000000000000000909604169473ffffffffffffffffffffffffffffffffffffffff94851694909316929184916370a0823191602480820192602092909190829003018186803b15801561146157600080fd5b505afa158015611475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114999190613251565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a082319060240160206040518083038186803b15801561150457600080fd5b505afa158015611518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153c9190613251565b306000908152600160205260408120549054919250908061155d8386612043565b61156791906133ba565b9950806115748385612043565b61157e91906133ba565b985060008a1180156115905750600089115b61161c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4255524e454400000000000000000000000000000000000000000000006064820152608401610555565b61162630836129c0565b611631868c8c611ea3565b61163c858c8b611ea3565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a082319060240160206040518083038186803b1580156116a157600080fd5b505afa1580156116b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d99190613251565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8616906370a082319060240160206040518083038186803b15801561174157600080fd5b505afa158015611755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117799190613251565b925061178784848a8a612479565b604080518b8152602081018b905273ffffffffffffffffffffffffffffffffffffffff8d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350505050505050506001600b81905550915091565b6000610de63384846127c4565b600b54600114611868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b55600654600754600a546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff938416939092169161193f918491869161193a916dffffffffffffffffffffffffffff9091169084906370a08231906024015b60206040518083038186803b15801561190257600080fd5b505afa158015611916573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190613251565b611ea3565b600a546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526119c4918391869161193a916e0100000000000000000000000000009091046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8516906370a08231906024016118ea565b50506001600b5550565b42841015611a38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f506f636b6574537761703a2045585049524544000000000000000000000000006044820152606401610555565b60035473ffffffffffffffffffffffffffffffffffffffff8816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611a98836134b7565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001611b399291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611bc2573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611c3d57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611ca3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f506f636b6574537761703a20494e56414c49445f5349474e41545552450000006044820152606401610555565b611cae898989612755565b505050505050505050565b600b54600114611d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b556006546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611e9c9173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015611d9557600080fd5b505afa158015611da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dcd9190613251565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015611e3657600080fd5b505afa158015611e4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6e9190613251565b600a546dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416612479565b6001600b55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611f6a91906132fa565b6000604051808303816000865af19150503d8060008114611fa7576040519150601f19603f3d011682016040523d82523d6000602084013e611fac565b606091505b5091509150818015611fd6575080511580611fd6575080806020019051810190611fd691906131e3565b61203c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f506f636b6574537761703a205452414e534645525f4641494c454400000000006044820152606401610555565b5050505050565b600061204f8284613412565b9392505050565b600061204f828461344f565b600554604080517fb8cb1c35000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163b8cb1c35916004808301926020929190829003018186803b1580156120cd57600080fd5b505afa1580156120e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210591906130af565b905061210f612a71565b1561228b57600554604080517f46870d2b000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916346870d2b916004808301926020929190829003018186803b15801561217f57600080fd5b505afa158015612193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b79190613251565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152909150600090633b9aca0090839073ffffffffffffffffffffffffffffffffffffffff8616906370a082319060240160206040518083038186803b15801561222a57600080fd5b505afa15801561223e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122629190613251565b61226c9190613412565b61227691906133ba565b9050612283838483611ea3565b505050612473565b600080600061229d8888888888612b60565b9250925092506122ae828483611ea3565b73ffffffffffffffffffffffffffffffffffffffff8083169085161060006122d7838684612e5a565b9050600080836122e9576000836122ed565b8260005b6040517f022c0d9f00000000000000000000000000000000000000000000000000000000815260048101839052602481018290523060448201526080606482015260006084820152919350915073ffffffffffffffffffffffffffffffffffffffff88169063022c0d9f9060a401600060405180830381600087803b15801561237557600080fd5b505af1158015612389573d6000803e3d6000fd5b50506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8b1692506370a08231915060240160206040518083038186803b1580156123f257600080fd5b505afa158015612406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242a9190613251565b9250612437888985611ea3565b6040518381527f79708e1c4696e28e3d9319fe13be27a879668880b98fee5d9d458624cfd843b59060200160405180910390a150505050505050505b50505050565b6dffffffffffffffffffffffffffff84118015906124a557506dffffffffffffffffffffffffffff8311155b61250b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a204f564552464c4f570000000000000000000000006044820152606401610555565b600061251c640100000000426134f0565b600a54909150600090612555907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1683613466565b905060008163ffffffff1611801561257c57506dffffffffffffffffffffffffffff841615155b801561259757506dffffffffffffffffffffffffffff831615155b15612665578063ffffffff166125d4856125b08661301c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169061304d565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166125fc9190613412565b6008600082825461260d9190613367565b909155505063ffffffff8116612626846125b08761301c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661264e9190613412565b6009600082825461265f9190613367565b90915550505b600a805463ffffffff84167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8981166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020546127f49082612056565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602052604080822093909355908416815220546128309082613069565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906127b79085815260200190565b600060038211156128f257508060006128ab6002836133ba565b6128b6906001613367565b90505b818110156128ec579050806002816128d181866133ba565b6128db9190613367565b6128e591906133ba565b90506128b9565b50919050565b81156128fc575060015b919050565b60005461290e9082613069565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546129409082613069565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061299e9085815260200190565b60405180910390a35050565b60008183106129b9578161204f565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260409020546129f09082612056565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604081209190915554612a249082612056565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161299e565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b8cb1c356040518163ffffffff1660e01b815260040160206040518083038186803b158015612adc57600080fd5b505afa158015612af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1491906130af565b60065490915073ffffffffffffffffffffffffffffffffffffffff80831691161480612b5a575060075473ffffffffffffffffffffffffffffffffffffffff8281169116145b91505090565b6006546005546040517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820181905284841660248301526000939092849291169063e6a439059060440160206040518083038186803b158015612bde57600080fd5b505afa158015612bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c1691906130af565b9250600073ffffffffffffffffffffffffffffffffffffffff841615612c4c57868911612c435786612c45565b885b9050612d8d565b6007546005546040517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482018190528884166024830152955091169063e6a439059060440160206040518083038186803b158015612cc557600080fd5b505afa158015612cd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cfd91906130af565b9350858811612d0c5785612d0e565b875b905073ffffffffffffffffffffffffffffffffffffffff8416612d8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e6f20504f434b455420706169720000000000000000000000000000000000006044820152606401610555565b600554604080517f46870d2b000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916346870d2b916004808301926020929190829003018186803b158015612df857600080fd5b505afa158015612e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e309190613251565b9050633b9aca00612e418284613412565b612e4b91906133ba565b92505050955095509592505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b158015612ec557600080fd5b505afa158015612ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612efd9190613251565b90506000808573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015612f4857600080fd5b505afa158015612f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f809190613203565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060008086612fb4578383612fb7565b82845b90925090506000612fd6612fcf87633b9aca0061344f565b8b90612043565b90506000612fe48284612043565b9050600061300083612ffa87633b9aca00612043565b90613069565b905061300c81836133ba565b9c9b505050505050505050505050565b60006130476e0100000000000000000000000000006dffffffffffffffffffffffffffff84166133ce565b92915050565b600061204f6dffffffffffffffffffffffffffff83168461337f565b600061204f8284613367565b80516dffffffffffffffffffffffffffff811681146128fc57600080fd5b6000602082840312156130a4578081fd5b813561204f81613562565b6000602082840312156130c0578081fd5b815161204f81613562565b600080604083850312156130dd578081fd5b82356130e881613562565b915060208301356130f881613562565b809150509250929050565b600080600060608486031215613117578081fd5b833561312281613562565b9250602084013561313281613562565b929592945050506040919091013590565b600080600080600080600060e0888a03121561315d578283fd5b873561316881613562565b9650602088013561317881613562565b95506040880135945060608801359350608088013560ff8116811461319b578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156131ca578182fd5b82356131d581613562565b946020939093013593505050565b6000602082840312156131f4578081fd5b8151801515811461204f578182fd5b600080600060608486031215613217578283fd5b61322084613075565b925061322e60208501613075565b9150604084015163ffffffff81168114613246578182fd5b809150509250925092565b600060208284031215613262578081fd5b5051919050565b600080600080600060808688031215613280578081fd5b8535945060208601359350604086013561329981613562565b9250606086013567ffffffffffffffff808211156132b5578283fd5b818801915088601f8301126132c8578283fd5b8135818111156132d6578384fd5b8960208285010111156132e7578384fd5b9699959850939650602001949392505050565b6000825161330c81846020870161348b565b9190910192915050565b602081526000825180602084015261333581604085016020870161348b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000821982111561337a5761337a613504565b500190565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff808416806133ae576133ae613533565b92169190910492915050565b6000826133c9576133c9613533565b500490565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083168185168183048111821515161561340957613409613504565b02949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561344a5761344a613504565b500290565b60008282101561346157613461613504565b500390565b600063ffffffff8381169083168181101561348357613483613504565b039392505050565b60005b838110156134a657818101518382015260200161348e565b838111156124735750506000910152565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156134e9576134e9613504565b5060010190565b6000826134ff576134ff613533565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461358457600080fd5b5056fea264697066735822122066b01b7023e83b5dad73118d64a49cedbd8266677ff0b3e6650af78d10f2fde564736f6c63430008040033a26469706673582212201ebcbf78622f04f4d23edd7255252420ba4dbfc3c321f9df2c7de1e9e1c01ab164736f6c63430008040033",
  "immutableReferences": {
    "1839": [
      {
        "length": 32,
        "start": 382
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:43",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:43",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:43"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:43"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:43"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:43"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:43"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:43"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:43"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:43"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:43",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:43",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:43"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:43"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:43",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:43"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:43"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:43"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:43"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:43",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:43",
                "type": ""
              }
            ],
            "src": "14:310:43"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 43,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6735:43",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:43",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:43"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:43"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:43"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:43"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:43",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:43"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:43"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:43"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:43"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:43",
                "type": ""
              }
            ],
            "src": "14:196:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:126:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:26:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:43"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "348:6:43"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:22:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:22:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "366:39:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "376:18:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:29:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "366:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:43",
                "type": ""
              }
            ],
            "src": "215:196:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:183:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "549:26:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "558:6:43"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "566:6:43"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:22:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:22:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "524:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "533:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "520:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "520:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "545:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "516:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "513:2:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "584:39:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "613:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "594:18:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "594:29:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:43"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "632:48:43",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "665:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "676:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "661:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "661:18:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "642:18:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:38:43"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "632:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "461:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "472:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "484:6:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "492:6:43",
                "type": ""
              }
            ],
            "src": "416:270:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "772:113:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:26:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "827:6:43"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:43"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:22:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:22:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "793:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "802:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "814:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "785:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "782:2:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "853:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "869:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "863:5:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "863:16:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "853:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "738:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "749:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "761:6:43",
                "type": ""
              }
            ],
            "src": "691:194:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "960:120:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1006:26:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1015:6:43"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1023:6:43"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1008:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1008:22:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1008:22:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "981:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "990:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "977:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "977:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1002:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "973:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "970:2:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1041:33:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1064:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1051:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:23:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1041:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "926:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "937:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "949:6:43",
                "type": ""
              }
            ],
            "src": "890:190:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1232:221:43",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1242:76:43",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1252:66:43",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1246:2:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1334:3:43"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1347:2:43",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1351:6:43"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1343:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1343:15:43"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1360:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1339:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1339:24:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1327:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1327:37:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1327:37:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1384:3:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1389:2:43",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1380:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1380:12:43"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1402:2:43",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1406:6:43"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1398:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1398:15:43"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1415:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1394:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1394:24:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1373:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:46:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1373:46:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1428:19:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1439:3:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1444:2:43",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1435:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1435:12:43"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1428:3:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1200:3:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1205:6:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1213:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1224:3:43",
                "type": ""
              }
            ],
            "src": "1085:368:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1595:293:43",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1605:27:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1625:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1619:5:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:13:43"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1609:6:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1641:12:43",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "1650:3:43"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1645:1:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1714:77:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1739:3:43"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1744:1:43"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1735:3:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1735:11:43"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1762:6:43"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1770:1:43"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1758:3:43"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1758:14:43"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1774:4:43",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1754:3:43"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1754:25:43"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1748:5:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1748:32:43"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1728:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1728:53:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1728:53:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1673:1:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1676:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1670:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1670:13:43"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1684:21:43",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1686:17:43",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1695:1:43"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1698:4:43",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1691:3:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1691:12:43"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1686:1:43"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1666:3:43",
                    "statements": []
                  },
                  "src": "1662:129:43"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1817:33:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1830:3:43"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1835:6:43"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1826:3:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1826:16:43"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "1844:3:43"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1819:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1819:29:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1819:29:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1806:1:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1809:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1803:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1803:13:43"
                  },
                  "nodeType": "YulIf",
                  "src": "1800:2:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1859:23:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1870:3:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1875:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1866:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1866:16:43"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1859:3:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1571:3:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1576:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1587:3:43",
                "type": ""
              }
            ],
            "src": "1458:430:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2169:315:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2186:3:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2191:66:43",
                        "type": "",
                        "value": "0xff00000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2179:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2179:79:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2179:79:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2278:3:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2283:1:43",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2274:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2274:11:43"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2295:2:43",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2299:6:43"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2291:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2291:15:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2308:66:43",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2287:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2287:88:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2267:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2267:109:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2267:109:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2396:3:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2401:2:43",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2392:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2392:12:43"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2406:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2385:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2385:28:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2385:28:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2433:3:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2438:2:43",
                            "type": "",
                            "value": "53"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2429:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2429:12:43"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2443:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2422:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:28:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2422:28:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:19:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2470:3:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2475:2:43",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2466:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:12:43"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2459:3:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2129:3:43",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2134:6:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2142:6:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2150:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2161:3:43",
                "type": ""
              }
            ],
            "src": "1893:591:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2590:125:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2600:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2612:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2623:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2608:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2608:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2600:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2642:9:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2657:6:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2665:42:43",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2653:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2653:55:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2635:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2635:74:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2635:74:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2559:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2570:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2581:4:43",
                "type": ""
              }
            ],
            "src": "2489:226:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2849:198:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2859:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2871:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2882:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2867:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2867:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2859:4:43"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2894:52:43",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2904:42:43",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2898:2:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2962:9:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2977:6:43"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2985:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2973:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2973:15:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2955:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2955:34:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2955:34:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3009:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3020:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3005:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3005:18:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3029:6:43"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3037:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3025:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3025:15:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2998:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2998:43:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2998:43:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2810:9:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2821:6:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2829:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2840:4:43",
                "type": ""
              }
            ],
            "src": "2720:327:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3181:168:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3191:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3203:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3214:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3199:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3199:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3191:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3233:9:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3248:6:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3256:42:43",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3244:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:55:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3226:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3226:74:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3226:74:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3320:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3331:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3316:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3316:18:43"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3336:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3309:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3309:34:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3309:34:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3142:9:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3153:6:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3161:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3172:4:43",
                "type": ""
              }
            ],
            "src": "3052:297:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3455:76:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3465:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3477:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3488:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3473:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3473:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3465:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3507:9:43"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3518:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3500:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3500:25:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3500:25:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3424:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3435:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3446:4:43",
                "type": ""
              }
            ],
            "src": "3354:177:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3710:168:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3727:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3738:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3720:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3720:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3720:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3761:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3772:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3757:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3757:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3777:2:43",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3750:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3750:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3750:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3800:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3811:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3796:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3796:18:43"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3816:20:43",
                        "type": "",
                        "value": "PocketSwap:BIG_FEE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3789:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:48:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3789:48:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3846:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3858:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3869:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3854:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3854:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3846:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3687:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3701:4:43",
                "type": ""
              }
            ],
            "src": "3536:342:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4057:173:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4074:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4085:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4067:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4067:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4067:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4108:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4119:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4104:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4104:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4124:2:43",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4097:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4097:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4147:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4158:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4143:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:18:43"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4163:25:43",
                        "type": "",
                        "value": "PocketSwap:ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4136:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:53:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4136:53:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4198:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4210:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4221:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4206:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4206:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4198:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4034:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4048:4:43",
                "type": ""
              }
            ],
            "src": "3883:347:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4409:180:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4426:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4437:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4419:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4419:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4419:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4460:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4471:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4456:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4456:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4476:2:43",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4449:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4449:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4449:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4499:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4510:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4495:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4495:18:43"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4515:32:43",
                        "type": "",
                        "value": "PocketSwap:IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4488:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4488:60:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4488:60:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4557:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4569:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4580:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4565:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4565:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4557:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4386:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4400:4:43",
                "type": ""
              }
            ],
            "src": "4235:354:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4768:172:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4785:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4796:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4778:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4778:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4778:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4819:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4830:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4815:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4815:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4835:2:43",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4808:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4808:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4808:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4858:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4869:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4854:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4854:18:43"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4874:24:43",
                        "type": "",
                        "value": "PocketSwap:PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4847:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4847:52:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4847:52:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4908:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4920:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4931:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4916:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4916:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4908:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4745:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4759:4:43",
                "type": ""
              }
            ],
            "src": "4594:346:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5119:152:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5136:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5147:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5129:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5129:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5129:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5170:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5181:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5166:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5166:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5186:1:43",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5159:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5159:29:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5159:29:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5208:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5219:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5204:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5204:18:43"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5224:5:43",
                        "type": "",
                        "value": "WWZ"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5197:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5197:33:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5197:33:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5239:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5251:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5262:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5247:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5247:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5239:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5096:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5110:4:43",
                "type": ""
              }
            ],
            "src": "4945:326:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5450:170:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5467:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5478:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5460:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5460:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5460:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5501:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5512:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5497:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5497:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5517:2:43",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5490:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5490:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5490:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5540:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5551:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5536:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5536:18:43"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5556:22:43",
                        "type": "",
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5529:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5529:50:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5529:50:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5588:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5600:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5611:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5596:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5596:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5588:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5427:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5441:4:43",
                "type": ""
              }
            ],
            "src": "5276:344:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5726:76:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5736:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5748:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5759:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5744:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5744:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5736:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5778:9:43"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5789:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5771:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5771:25:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5771:25:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5695:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5706:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5717:4:43",
                "type": ""
              }
            ],
            "src": "5625:177:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5936:119:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5946:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5958:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5969:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5954:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5954:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5946:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5988:9:43"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5999:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5981:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5981:25:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5981:25:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6026:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6037:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6022:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6022:18:43"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6042:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6015:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6015:34:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6015:34:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5897:9:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5908:6:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5916:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5927:4:43",
                "type": ""
              }
            ],
            "src": "5807:248:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6106:228:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6137:168:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "6158:1:43"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6161:77:43",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6151:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6151:88:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6151:88:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6259:1:43",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6262:4:43",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6252:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6252:15:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6252:15:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "6287:1:43"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6290:4:43",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6280:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6280:15:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6280:15:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6126:1:43"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6119:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6119:9:43"
                  },
                  "nodeType": "YulIf",
                  "src": "6116:2:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6314:14:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6323:1:43"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6326:1:43"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6319:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6319:9:43"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6314:1:43"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6091:1:43",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6094:1:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6100:1:43",
                "type": ""
              }
            ],
            "src": "6060:274:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6391:342:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6518:180:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "6539:7:43"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6548:77:43",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6532:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6532:94:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6532:94:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6646:1:43",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6649:4:43",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6639:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6639:15:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6639:15:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "6674:7:43"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6683:4:43",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6667:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6667:21:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6667:21:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6422:1:43"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6415:6:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6415:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6408:6:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6408:17:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6430:1:43"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6437:66:43",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6505:1:43"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6433:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6433:74:43"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6427:2:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6427:81:43"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6404:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6404:105:43"
                  },
                  "nodeType": "YulIf",
                  "src": "6401:2:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6707:20:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6722:1:43"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6725:1:43"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6718:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6718:9:43"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6707:7:43"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6370:1:43",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6373:1:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6379:7:43",
                "type": ""
              }
            ],
            "src": "6339:394:43"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), end) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0xff00000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 1), and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 21), value1)\n        mstore(add(pos, 53), value2)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"PocketSwap:BIG_FEE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"PocketSwap:ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"PocketSwap:IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"PocketSwap:PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"WWZ\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"PocketSwap:FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x)))\n        {\n            mstore(product, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(product, 0x24)\n        }\n        product := mul(x, y)\n    }\n}",
      "id": 43,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "181:2509:9:-:0;;;305:3;275:33;;538:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;584:9;:22;;596:10;-1:-1:-1;;;;;;584:22:9;;;;;;616:30;;-1:-1:-1;;;;;;616:30:9;;;181:2509;;14:310:43;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:43;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:43:o;:::-;181:2509:9;;;;;;;;;;;;",
  "deployedSourceMap": "181:2509:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:34;;;;;;:::i;:::-;;:::i;:::-;;;2665:42:43;2653:55;;;2635:74;;2623:2;2608:18;497:34:9;;;;;;;;2543:145;;;:::i;:::-;;;3500:25:43;;;3488:2;3473:18;2543:145:9;3455:76:43;823:103:9;904:8;:15;823:103;;659:158;;;:::i;2081:230::-;;;;;;:::i;:::-;;:::i;:::-;;236:33;;;;;;;;;2317:220;;;;;;:::i;:::-;;:::i;366:47::-;;;;;932:1143;;;;;;:::i;:::-;;:::i;275:33::-;;;;;;420:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;497:34;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;497:34:9;:::o;2543:145::-;2596:7;2632:2;2622:3;;2628:1;2622:7;;;;:::i;:::-;:12;;;;:::i;:::-;2615:19;;2543:145;:::o;659:158::-;722:7;775:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;758:51;;775:33;;758:51;;:::i;:::-;;;;;;;;;;;;;748:62;;;;;;741:69;;659:158;:::o;2081:230::-;2161:9;;;;2147:10;:23;2139:56;;;;;;;5478:2:43;2139:56:9;;;5460:21:43;5517:2;5497:18;;;5490:30;5556:22;5536:18;;;5529:50;5596:18;;2139:56:9;;;;;;;;;2220:4;2213;:11;2205:42;;;;;;;3738:2:43;2205:42:9;;;3720:21:43;3777:2;3757:18;;;3750:30;3816:20;3796:18;;;3789:48;3854:18;;2205:42:9;3710:168:43;2205:42:9;2274:3;;2263:21;;;5981:25:43;;;6037:2;6022:18;;6015:34;;;2263:21:9;;5954:18:43;2263:21:9;;;;;;;2294:3;:10;2081:230::o;2317:220::-;2409:9;;;;2395:10;:23;2387:56;;;;;;;5478:2:43;2387:56:9;;;5460:21:43;5517:2;5497:18;;;5490:30;5556:22;5536:18;;;5529:50;5596:18;;2387:56:9;5450:170:43;2387:56:9;2476:9;;2459:39;;;2476:9;;;;2955:34:43;;3025:15;;;3020:2;3005:18;;2998:43;2459:39:9;;2867:18:43;2459:39:9;;;;;;;2508:9;:22;;;;;;;;;;;;;;;2317:220::o;932:1143::-;1011:12;1053:6;1043:16;;:6;:16;;;;1035:59;;;;;;;4437:2:43;1035:59:9;;;4419:21:43;4476:2;4456:18;;;4449:30;4515:32;4495:18;;;4488:60;4565:18;;1035:59:9;4409:180:43;1035:59:9;1105:14;1121;1148:6;1139:15;;:6;:15;;;:53;;1177:6;1185;1139:53;;;1158:6;1166;1139:53;1104:88;;-1:-1:-1;1104:88:9;-1:-1:-1;1210:20:9;;;1202:56;;;;;;;4085:2:43;1202:56:9;;;4067:21:43;4124:2;4104:18;;;4097:30;4163:25;4143:18;;;4136:53;4206:18;;1202:56:9;4057:173:43;1202:56:9;1276:37;:15;;;1311:1;1276:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;1268:72;;;;;;;4796:2:43;1268:72:9;;;4778:21:43;4835:2;4815:18;;;4808:30;4874:24;4854:18;;;4847:52;4916:18;;1268:72:9;4768:172:43;1268:72:9;1380:21;1404:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1252:66:43;1347:2;1343:15;;;1339:24;;1404:33:9;1472:32;;1327:37:43;1398:15;;;1394:24;1380:12;;;1373:46;1404:33:9;;-1:-1:-1;1447:12:9;;1435::43;;1472:32:9;;;;;;;;;;;;1462:43;;;;;;1447:58;;1593:4;1582:8;1576:15;1571:2;1561:8;1557:17;1554:1;1546:52;1618:47;;;;;:31;2973:15:43;;;1618:47:9;;;2955:34:43;3025:15;;;3005:18;;;2998:43;1538:60:9;;-1:-1:-1;1618:31:9;;;;;;2867:18:43;;1618:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1675:15:9;;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;:30;;;;;;;;;;;;;;1715:15;;;;;;:23;;;;;;;;;:30;;;;;;;;1800:8;:19;;1675:30;1800:19;;;;;;;;;;;;;;;;-1:-1:-1;1846:57:9;1881:4;1683:6;1691;1846:26;:57::i;:::-;1838:65;;:4;:65;;;1830:81;;;;;;;5147:2:43;1830:81:9;;;5129:21:43;5186:1;5166:18;;;5159:29;5224:5;5204:18;;;5197:33;5247:18;;1830:81:9;5119:152:43;1830:81:9;1937:57;1972:4;1979:6;1987;1937:26;:57::i;:::-;1929:65;;:4;:65;;;1921:81;;;;;;;5147:2:43;1921:81:9;;;5129:21:43;5186:1;5166:18;;;5159:29;5224:5;5204:18;;;5197:33;5247:18;;1921:81:9;5119:152:43;1921:81:9;2052:8;:15;2018:50;;;;3244:55:43;;;3226:74;;3331:2;3316:18;;3309:34;;;;2018:50:9;;;;;;;;;3199:18:43;2018:50:9;;;;;;;932:1143;;;;;;;;:::o;565:675:32:-;661:12;686:14;702;729:6;720:15;;:6;:15;;;:53;;758:6;766;720:53;;;739:6;747;720:53;1031:32;;1252:66:43;1347:2;1343:15;;;1339:24;;1031:32:32;;;1327:37:43;1398:15;;;1394:24;1380:12;;;1373:46;685:88:32;;-1:-1:-1;685:88:32;-1:-1:-1;984:7:32;;1435:12:43;;1031:32:32;;;;;;;;;;;;1021:43;;;;;;1113:7;1094:47;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;901:268;;2191:66:43;901:268:32;;;2179:79:43;2295:2;2291:15;;;;2308:66;2287:88;2274:11;;;2267:109;2392:12;;;2385:28;;;;2429:12;;;2422:28;2466:12;;901:268:32;;;;;;;;;;;;;866:325;;901:268;866:325;;;;;565:675;-1:-1:-1;;;;;;565:675:32:o;-1:-1:-1:-;;;;;;;;:::o;14:196:43:-;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:196::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:43:o;416:270::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;594:29;613:9;594:29;:::i;:::-;584:39;;642:38;676:2;665:9;661:18;642:38;:::i;:::-;632:48;;503:183;;;;;:::o;691:194::-;761:6;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;-1:-1:-1;863:16:43;;772:113;-1:-1:-1;772:113:43:o;890:190::-;949:6;1002:2;990:9;981:7;977:23;973:32;970:2;;;1023:6;1015;1008:22;970:2;-1:-1:-1;1051:23:43;;960:120;-1:-1:-1;960:120:43:o;1458:430::-;1587:3;1625:6;1619:13;1650:3;1662:129;1676:6;1673:1;1670:13;1662:129;;;1774:4;1758:14;;;1754:25;;1748:32;1735:11;;;1728:53;1691:12;1662:129;;;1809:6;1806:1;1803:13;1800:2;;;1844:3;1835:6;1830:3;1826:16;1819:29;1800:2;-1:-1:-1;1866:16:43;;;;;1595:293;-1:-1:-1;;1595:293:43:o;6060:274::-;6100:1;6126;6116:2;;6161:77;6158:1;6151:88;6262:4;6259:1;6252:15;6290:4;6287:1;6280:15;6116:2;-1:-1:-1;6319:9:43;;6106:228::o;6339:394::-;6379:7;6505:1;6437:66;6433:74;6430:1;6427:81;6422:1;6415:9;6408:17;6404:105;6401:2;;;6548:77;6539:7;6532:94;6649:4;6646:1;6639:15;6683:4;6674:7;6667:21;6401:2;-1:-1:-1;6718:9:43;;6391:342::o",
  "source": "// SPDX-License-Identifier: Unlicensed\npragma solidity =0.8.4;\n\n\nimport './PocketSwapPair.sol';\nimport './interfaces/IPocketSwapFactory.sol';\nimport './libraries/PairAddress.sol';\n\ncontract PocketSwapFactory is IPocketSwapFactory {\n    address public override feeSetter;\n    uint256 public override fee = 3e6; // 1e9 = 100%; 1e8 = 10%; 1e7 = 1%; 1e6 = 0.1% ....\n    address public immutable override pocketAddress;\n\n    mapping(address => mapping(address => address)) public override getPair;\n    address[] public override allPairs;\n\n    constructor(address _pocketAddress) {\n        feeSetter = msg.sender;\n        pocketAddress = _pocketAddress;\n    }\n\n    function PAIR_INIT_CODE_HASH() external override pure returns (bytes32) {\n        return keccak256(abi.encodePacked(type(PocketSwapPair).creationCode));\n    }\n\n    function allPairsLength() external override view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external override returns (address pair) {\n        require(tokenA != tokenB, 'PocketSwap:IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'PocketSwap:ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'PocketSwap:PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(PocketSwapPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n\n        PocketSwapPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n\n        require(pair == PairAddress.computeAddress(address(this), token0, token1), \"WWZ\");\n        require(pair == PairAddress.computeAddress(address(this), token1, token0), \"WWZ\");\n\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFee(uint256 _fee) external override {\n        require(msg.sender == feeSetter, 'PocketSwap:FORBIDDEN');\n        require(_fee < 1e18, 'PocketSwap:BIG_FEE');\n\n        emit FeeUpdated(fee, _fee);\n        fee = _fee;\n    }\n\n    function setFeeSetter(address _feeSetter) external override {\n        require(msg.sender == feeSetter, 'PocketSwap:FORBIDDEN');\n\n        emit FeeSetterUpdated(feeSetter, _feeSetter);\n        feeSetter = _feeSetter;\n    }\n\n    function holdersFee() external view override returns(uint256) {\n        return fee * 5 / 30; // POCKET holders are getting 5/30 of the fees\n    }\n}\n",
  "sourcePath": "/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/PocketSwap/contracts/pocketswap/PocketSwapFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/pocketswap/PocketSwapFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        694
      ],
      "IPocketSwapCallback": [
        4384
      ],
      "IPocketSwapERC20": [
        4004
      ],
      "IPocketSwapFactory": [
        4094
      ],
      "IPocketSwapPair": [
        4291
      ],
      "Math": [
        4783
      ],
      "PairAddress": [
        4847
      ],
      "PlainMath": [
        5006
      ],
      "PocketSwapERC20": [
        1822
      ],
      "PocketSwapFactory": [
        2104
      ],
      "PocketSwapPair": [
        3412
      ],
      "StorageData": [
        5715
      ],
      "UQ112x112": [
        5690
      ]
    },
    "id": 2105,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1824,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:9"
      },
      {
        "absolutePath": "project:/contracts/pocketswap/PocketSwapPair.sol",
        "file": "./PocketSwapPair.sol",
        "id": 1825,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2105,
        "sourceUnit": 3413,
        "src": "65:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/pocketswap/interfaces/IPocketSwapFactory.sol",
        "file": "./interfaces/IPocketSwapFactory.sol",
        "id": 1826,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2105,
        "sourceUnit": 4095,
        "src": "96:45:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/pocketswap/libraries/PairAddress.sol",
        "file": "./libraries/PairAddress.sol",
        "id": 1827,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2105,
        "sourceUnit": 4848,
        "src": "142:37:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1828,
              "name": "IPocketSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4094,
              "src": "211:18:9"
            },
            "id": 1829,
            "nodeType": "InheritanceSpecifier",
            "src": "211:18:9"
          }
        ],
        "contractDependencies": [
          3412
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2104,
        "linearizedBaseContracts": [
          2104,
          4094
        ],
        "name": "PocketSwapFactory",
        "nameLocation": "190:17:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              4053
            ],
            "constant": false,
            "functionSelector": "87cf3ef4",
            "id": 1832,
            "mutability": "mutable",
            "name": "feeSetter",
            "nameLocation": "260:9:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1831,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "251:8:9"
            },
            "scope": 2104,
            "src": "236:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1830,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4023
            ],
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 1836,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "299:3:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1834,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "290:8:9"
            },
            "scope": 2104,
            "src": "275:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1833,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "275:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "336536",
              "id": 1835,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "305:3:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000_by_1",
                "typeString": "int_const 3000000"
              },
              "value": "3e6"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4033
            ],
            "constant": false,
            "functionSelector": "b8cb1c35",
            "id": 1839,
            "mutability": "immutable",
            "name": "pocketAddress",
            "nameLocation": "400:13:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1838,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "391:8:9"
            },
            "scope": 2104,
            "src": "366:47:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1837,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4062
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1846,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "484:7:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1845,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "475:8:9"
            },
            "scope": 2104,
            "src": "420:71:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1844,
              "keyType": {
                "id": 1840,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "428:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "420:47:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1843,
                "keyType": {
                  "id": 1841,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "447:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "439:27:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1842,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4069
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1850,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "523:8:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1849,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "514:8:9"
            },
            "scope": 2104,
            "src": "497:34:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1847,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "497:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1848,
              "nodeType": "ArrayTypeName",
              "src": "497:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1864,
              "nodeType": "Block",
              "src": "574:79:9",
              "statements": [
                {
                  "expression": {
                    "id": 1858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1855,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1832,
                      "src": "584:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1856,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "596:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "596:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "584:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1859,
                  "nodeType": "ExpressionStatement",
                  "src": "584:22:9"
                },
                {
                  "expression": {
                    "id": 1862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1860,
                      "name": "pocketAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1839,
                      "src": "616:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1861,
                      "name": "_pocketAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1852,
                      "src": "632:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "616:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1863,
                  "nodeType": "ExpressionStatement",
                  "src": "616:30:9"
                }
              ]
            },
            "id": 1865,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1852,
                  "mutability": "mutable",
                  "name": "_pocketAddress",
                  "nameLocation": "558:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1865,
                  "src": "550:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:24:9"
            },
            "returnParameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:9"
            },
            "scope": 2104,
            "src": "538:115:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4093
            ],
            "body": {
              "id": 1881,
              "nodeType": "Block",
              "src": "731:86:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1875,
                                  "name": "PocketSwapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3412,
                                  "src": "780:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                                    "typeString": "type(contract PocketSwapPair)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                                    "typeString": "type(contract PocketSwapPair)"
                                  }
                                ],
                                "id": 1874,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "775:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "775:20:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$3412",
                                "typeString": "type(contract PocketSwapPair)"
                              }
                            },
                            "id": 1877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "creationCode",
                            "nodeType": "MemberAccess",
                            "src": "775:33:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1872,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "758:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "758:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "758:51:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1871,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "748:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:62:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1870,
                  "id": 1880,
                  "nodeType": "Return",
                  "src": "741:69:9"
                }
              ]
            },
            "functionSelector": "57b84f8c",
            "id": 1882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PAIR_INIT_CODE_HASH",
            "nameLocation": "668:19:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1867,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "699:8:9"
            },
            "parameters": {
              "id": 1866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "687:2:9"
            },
            "returnParameters": {
              "id": 1870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1869,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1882,
                  "src": "722:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1868,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:9:9"
            },
            "scope": 2104,
            "src": "659:158:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4074
            ],
            "body": {
              "id": 1891,
              "nodeType": "Block",
              "src": "887:39:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1888,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1850,
                      "src": "904:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "904:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1887,
                  "id": 1890,
                  "nodeType": "Return",
                  "src": "897:22:9"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "832:14:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1884,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "858:8:9"
            },
            "parameters": {
              "id": 1883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:2:9"
            },
            "returnParameters": {
              "id": 1887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1886,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1892,
                  "src": "881:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1885,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:6:9"
            },
            "scope": 2104,
            "src": "823:103:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4083
            ],
            "body": {
              "id": 2034,
              "nodeType": "Block",
              "src": "1025:1050:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1903,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1894,
                          "src": "1043:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1904,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1896,
                          "src": "1053:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1043:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4944454e544943414c5f414444524553534553",
                        "id": 1906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1061:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        },
                        "value": "PocketSwap:IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1035:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1908,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:59:9"
                },
                {
                  "assignments": [
                    1910,
                    1912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1910,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "1113:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "1105:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1909,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1105:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1912,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "1129:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "1121:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1911,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1121:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1923,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1913,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1894,
                        "src": "1139:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1914,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1896,
                        "src": "1148:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1139:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1919,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1896,
                          "src": "1177:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1920,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1894,
                          "src": "1185:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1921,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1176:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1139:53:9",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1916,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1894,
                          "src": "1158:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1917,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1896,
                          "src": "1166:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1918,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1157:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1104:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1925,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1910,
                          "src": "1210:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1228:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1220:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1926,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1220:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1220:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1210:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a5a45524f5f41444452455353",
                        "id": 1931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1232:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        },
                        "value": "PocketSwap:ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1202:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1933,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:56:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1935,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1846,
                              "src": "1276:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1937,
                            "indexExpression": {
                              "id": 1936,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "1284:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1276:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1939,
                          "indexExpression": {
                            "id": 1938,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "1292:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1276:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1311:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1303:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1940,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1303:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1303:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1276:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a504149525f455849535453",
                        "id": 1945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1315:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        },
                        "value": "PocketSwap:PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        }
                      ],
                      "id": 1934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1268:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:72:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1947,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:72:9"
                },
                {
                  "assignments": [
                    1949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1949,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1393:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "1380:21:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1948,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1380:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1954,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1951,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3412,
                          "src": "1409:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        ],
                        "id": 1950,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1404:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1404:20:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$3412",
                        "typeString": "type(contract PocketSwapPair)"
                      }
                    },
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1404:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1380:57:9"
                },
                {
                  "assignments": [
                    1956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1956,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1455:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "1447:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1955,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1447:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1964,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1960,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "1489:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1961,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "1497:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1958,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1472:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1472:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1472:32:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1957,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1462:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1462:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1447:58:9"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1524:84:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1538:60:9",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1554:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1561:8:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1571:2:9",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1557:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1557:17:9"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1582:8:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1576:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1576:15:9"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1593:4:9"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1546:7:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1546:52:9"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1538:4:9"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1949,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1561:8:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1949,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1582:8:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1900,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1538:4:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1956,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1593:4:9",
                      "valueSize": 1
                    }
                  ],
                  "id": 1965,
                  "nodeType": "InlineAssembly",
                  "src": "1515:93:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1970,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "1650:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1971,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "1658:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1967,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1900,
                            "src": "1633:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1966,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3412,
                          "src": "1618:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        },
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1618:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PocketSwapPair_$3412",
                          "typeString": "contract PocketSwapPair"
                        }
                      },
                      "id": 1969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2318,
                      "src": "1618:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1973,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:47:9"
                },
                {
                  "expression": {
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1974,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1846,
                          "src": "1675:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1977,
                        "indexExpression": {
                          "id": 1975,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1910,
                          "src": "1683:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1675:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1978,
                      "indexExpression": {
                        "id": 1976,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "1691:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1675:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1979,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1900,
                      "src": "1701:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1675:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1981,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:30:9"
                },
                {
                  "expression": {
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1982,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1846,
                          "src": "1715:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1985,
                        "indexExpression": {
                          "id": 1983,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1912,
                          "src": "1723:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1715:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1986,
                      "indexExpression": {
                        "id": 1984,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "1731:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1715:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1987,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1900,
                      "src": "1741:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1715:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1993,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1900,
                        "src": "1814:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1990,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1850,
                        "src": "1800:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1800:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1995,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:19:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1997,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1900,
                          "src": "1838:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2002,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1881:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2104",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2104",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                ],
                                "id": 2001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1873:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2000,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1873:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1873:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2004,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "1888:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2005,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1912,
                              "src": "1896:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1998,
                              "name": "PairAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4847,
                              "src": "1846:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PairAddress_$4847_$",
                                "typeString": "type(library PairAddress)"
                              }
                            },
                            "id": 1999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4846,
                            "src": "1846:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address,address) pure returns (address)"
                            }
                          },
                          "id": 2006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1846:57:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1838:65:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57575a",
                        "id": 2008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        },
                        "value": "WWZ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        }
                      ],
                      "id": 1996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1830:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:81:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2010,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:81:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2012,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1900,
                          "src": "1929:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2017,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1972:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2104",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2104",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                ],
                                "id": 2016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1964:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2015,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1964:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1964:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2019,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1912,
                              "src": "1979:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2020,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "1987:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2013,
                              "name": "PairAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4847,
                              "src": "1937:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PairAddress_$4847_$",
                                "typeString": "type(library PairAddress)"
                              }
                            },
                            "id": 2014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4846,
                            "src": "1937:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address,address) pure returns (address)"
                            }
                          },
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1937:57:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1929:65:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57575a",
                        "id": 2023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1996:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        },
                        "value": "WWZ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        }
                      ],
                      "id": 2011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:81:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2025,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:81:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2027,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "2030:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2028,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "2038:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2029,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1900,
                        "src": "2046:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2030,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1850,
                          "src": "2052:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2052:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2026,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4048,
                      "src": "2018:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 2032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2033,
                  "nodeType": "EmitStatement",
                  "src": "2013:55:9"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 2035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "941:10:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1898,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "993:8:9"
            },
            "parameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1894,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "960:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "952:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1896,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "976:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "968:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:32:9"
            },
            "returnParameters": {
              "id": 1901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1900,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "1019:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "1011:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:14:9"
            },
            "scope": 2104,
            "src": "932:1143:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4038
            ],
            "body": {
              "id": 2065,
              "nodeType": "Block",
              "src": "2129:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2042,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2147:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2147:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2044,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1832,
                          "src": "2161:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2147:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2172:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 2041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2139:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2139:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "2139:56:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2050,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2037,
                          "src": "2213:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 2051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2220:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "2213:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4249475f464545",
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2226:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        },
                        "value": "PocketSwap:BIG_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        }
                      ],
                      "id": 2049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2205:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2055,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:42:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2057,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "2274:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2058,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "2279:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2056,
                      "name": "FeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "2263:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2263:21:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2060,
                  "nodeType": "EmitStatement",
                  "src": "2258:26:9"
                },
                {
                  "expression": {
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2061,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1836,
                      "src": "2294:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2062,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2037,
                      "src": "2300:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2294:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2064,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:10:9"
                }
              ]
            },
            "functionSelector": "69fe0e2d",
            "id": 2066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFee",
            "nameLocation": "2090:6:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2039,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2120:8:9"
            },
            "parameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "2105:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2066,
                  "src": "2097:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2096:14:9"
            },
            "returnParameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2129:0:9"
            },
            "scope": 2104,
            "src": "2081:230:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4088
            ],
            "body": {
              "id": 2089,
              "nodeType": "Block",
              "src": "2377:160:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2073,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2395:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2395:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2075,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1832,
                          "src": "2409:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2395:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2420:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 2072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2387:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2387:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:56:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2081,
                        "name": "feeSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1832,
                        "src": "2476:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2082,
                        "name": "_feeSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2068,
                        "src": "2487:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2080,
                      "name": "FeeSetterUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4018,
                      "src": "2459:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2459:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2084,
                  "nodeType": "EmitStatement",
                  "src": "2454:44:9"
                },
                {
                  "expression": {
                    "id": 2087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2085,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1832,
                      "src": "2508:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2086,
                      "name": "_feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2068,
                      "src": "2520:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2508:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2088,
                  "nodeType": "ExpressionStatement",
                  "src": "2508:22:9"
                }
              ]
            },
            "functionSelector": "b19805af",
            "id": 2090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeSetter",
            "nameLocation": "2326:12:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2070,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2368:8:9"
            },
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2068,
                  "mutability": "mutable",
                  "name": "_feeSetter",
                  "nameLocation": "2347:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "2339:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2338:20:9"
            },
            "returnParameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2377:0:9"
            },
            "scope": 2104,
            "src": "2317:220:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4028
            ],
            "body": {
              "id": 2102,
              "nodeType": "Block",
              "src": "2605:83:9",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2096,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "2622:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 2097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2628:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "2622:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3330",
                      "id": 2099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2632:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_30_by_1",
                        "typeString": "int_const 30"
                      },
                      "value": "30"
                    },
                    "src": "2622:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2095,
                  "id": 2101,
                  "nodeType": "Return",
                  "src": "2615:19:9"
                }
              ]
            },
            "functionSelector": "46870d2b",
            "id": 2103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "holdersFee",
            "nameLocation": "2552:10:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2092,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2579:8:9"
            },
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2562:2:9"
            },
            "returnParameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2094,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "2596:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2595:9:9"
            },
            "scope": 2104,
            "src": "2543:145:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2105,
        "src": "181:2509:9",
        "usedErrors": []
      }
    ],
    "src": "39:2652:9"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/pocketswap/PocketSwapFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        694
      ],
      "IPocketSwapCallback": [
        4384
      ],
      "IPocketSwapERC20": [
        4004
      ],
      "IPocketSwapFactory": [
        4094
      ],
      "IPocketSwapPair": [
        4291
      ],
      "Math": [
        4783
      ],
      "PairAddress": [
        4847
      ],
      "PlainMath": [
        5006
      ],
      "PocketSwapERC20": [
        1822
      ],
      "PocketSwapFactory": [
        2104
      ],
      "PocketSwapPair": [
        3412
      ],
      "StorageData": [
        5715
      ],
      "UQ112x112": [
        5690
      ]
    },
    "id": 2105,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1824,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:9"
      },
      {
        "absolutePath": "project:/contracts/pocketswap/PocketSwapPair.sol",
        "file": "./PocketSwapPair.sol",
        "id": 1825,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2105,
        "sourceUnit": 3413,
        "src": "65:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/pocketswap/interfaces/IPocketSwapFactory.sol",
        "file": "./interfaces/IPocketSwapFactory.sol",
        "id": 1826,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2105,
        "sourceUnit": 4095,
        "src": "96:45:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/pocketswap/libraries/PairAddress.sol",
        "file": "./libraries/PairAddress.sol",
        "id": 1827,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2105,
        "sourceUnit": 4848,
        "src": "142:37:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1828,
              "name": "IPocketSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4094,
              "src": "211:18:9"
            },
            "id": 1829,
            "nodeType": "InheritanceSpecifier",
            "src": "211:18:9"
          }
        ],
        "contractDependencies": [
          3412
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2104,
        "linearizedBaseContracts": [
          2104,
          4094
        ],
        "name": "PocketSwapFactory",
        "nameLocation": "190:17:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              4053
            ],
            "constant": false,
            "functionSelector": "87cf3ef4",
            "id": 1832,
            "mutability": "mutable",
            "name": "feeSetter",
            "nameLocation": "260:9:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1831,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "251:8:9"
            },
            "scope": 2104,
            "src": "236:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1830,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4023
            ],
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 1836,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "299:3:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1834,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "290:8:9"
            },
            "scope": 2104,
            "src": "275:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1833,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "275:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "336536",
              "id": 1835,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "305:3:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000_by_1",
                "typeString": "int_const 3000000"
              },
              "value": "3e6"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4033
            ],
            "constant": false,
            "functionSelector": "b8cb1c35",
            "id": 1839,
            "mutability": "immutable",
            "name": "pocketAddress",
            "nameLocation": "400:13:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1838,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "391:8:9"
            },
            "scope": 2104,
            "src": "366:47:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1837,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4062
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1846,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "484:7:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1845,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "475:8:9"
            },
            "scope": 2104,
            "src": "420:71:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1844,
              "keyType": {
                "id": 1840,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "428:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "420:47:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1843,
                "keyType": {
                  "id": 1841,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "447:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "439:27:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1842,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4069
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1850,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "523:8:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1849,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "514:8:9"
            },
            "scope": 2104,
            "src": "497:34:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1847,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "497:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1848,
              "nodeType": "ArrayTypeName",
              "src": "497:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1864,
              "nodeType": "Block",
              "src": "574:79:9",
              "statements": [
                {
                  "expression": {
                    "id": 1858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1855,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1832,
                      "src": "584:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1856,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "596:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "596:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "584:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1859,
                  "nodeType": "ExpressionStatement",
                  "src": "584:22:9"
                },
                {
                  "expression": {
                    "id": 1862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1860,
                      "name": "pocketAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1839,
                      "src": "616:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1861,
                      "name": "_pocketAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1852,
                      "src": "632:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "616:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1863,
                  "nodeType": "ExpressionStatement",
                  "src": "616:30:9"
                }
              ]
            },
            "id": 1865,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1852,
                  "mutability": "mutable",
                  "name": "_pocketAddress",
                  "nameLocation": "558:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1865,
                  "src": "550:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:24:9"
            },
            "returnParameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:9"
            },
            "scope": 2104,
            "src": "538:115:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4093
            ],
            "body": {
              "id": 1881,
              "nodeType": "Block",
              "src": "731:86:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1875,
                                  "name": "PocketSwapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3412,
                                  "src": "780:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                                    "typeString": "type(contract PocketSwapPair)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                                    "typeString": "type(contract PocketSwapPair)"
                                  }
                                ],
                                "id": 1874,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "775:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "775:20:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$3412",
                                "typeString": "type(contract PocketSwapPair)"
                              }
                            },
                            "id": 1877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "creationCode",
                            "nodeType": "MemberAccess",
                            "src": "775:33:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1872,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "758:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "758:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "758:51:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1871,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "748:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:62:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1870,
                  "id": 1880,
                  "nodeType": "Return",
                  "src": "741:69:9"
                }
              ]
            },
            "functionSelector": "57b84f8c",
            "id": 1882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PAIR_INIT_CODE_HASH",
            "nameLocation": "668:19:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1867,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "699:8:9"
            },
            "parameters": {
              "id": 1866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "687:2:9"
            },
            "returnParameters": {
              "id": 1870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1869,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1882,
                  "src": "722:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1868,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:9:9"
            },
            "scope": 2104,
            "src": "659:158:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4074
            ],
            "body": {
              "id": 1891,
              "nodeType": "Block",
              "src": "887:39:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1888,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1850,
                      "src": "904:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "904:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1887,
                  "id": 1890,
                  "nodeType": "Return",
                  "src": "897:22:9"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "832:14:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1884,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "858:8:9"
            },
            "parameters": {
              "id": 1883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:2:9"
            },
            "returnParameters": {
              "id": 1887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1886,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1892,
                  "src": "881:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1885,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:6:9"
            },
            "scope": 2104,
            "src": "823:103:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4083
            ],
            "body": {
              "id": 2034,
              "nodeType": "Block",
              "src": "1025:1050:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1903,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1894,
                          "src": "1043:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1904,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1896,
                          "src": "1053:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1043:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4944454e544943414c5f414444524553534553",
                        "id": 1906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1061:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        },
                        "value": "PocketSwap:IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1035:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1908,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:59:9"
                },
                {
                  "assignments": [
                    1910,
                    1912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1910,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "1113:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "1105:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1909,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1105:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1912,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "1129:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "1121:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1911,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1121:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1923,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1913,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1894,
                        "src": "1139:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1914,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1896,
                        "src": "1148:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1139:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1919,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1896,
                          "src": "1177:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1920,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1894,
                          "src": "1185:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1921,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1176:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1139:53:9",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1916,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1894,
                          "src": "1158:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1917,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1896,
                          "src": "1166:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1918,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1157:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1104:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1925,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1910,
                          "src": "1210:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1228:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1220:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1926,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1220:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1220:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1210:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a5a45524f5f41444452455353",
                        "id": 1931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1232:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        },
                        "value": "PocketSwap:ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1202:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1933,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:56:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1935,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1846,
                              "src": "1276:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1937,
                            "indexExpression": {
                              "id": 1936,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "1284:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1276:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1939,
                          "indexExpression": {
                            "id": 1938,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "1292:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1276:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1311:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1303:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1940,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1303:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1303:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1276:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a504149525f455849535453",
                        "id": 1945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1315:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        },
                        "value": "PocketSwap:PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        }
                      ],
                      "id": 1934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1268:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:72:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1947,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:72:9"
                },
                {
                  "assignments": [
                    1949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1949,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1393:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "1380:21:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1948,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1380:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1954,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1951,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3412,
                          "src": "1409:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        ],
                        "id": 1950,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1404:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1404:20:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$3412",
                        "typeString": "type(contract PocketSwapPair)"
                      }
                    },
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1404:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1380:57:9"
                },
                {
                  "assignments": [
                    1956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1956,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1455:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "1447:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1955,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1447:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1964,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1960,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "1489:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1961,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "1497:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1958,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1472:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1472:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1472:32:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1957,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1462:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1462:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1447:58:9"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1524:84:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1538:60:9",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1554:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1561:8:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1571:2:9",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1557:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1557:17:9"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1582:8:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1576:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1576:15:9"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1593:4:9"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1546:7:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1546:52:9"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1538:4:9"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1949,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1561:8:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1949,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1582:8:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1900,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1538:4:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1956,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1593:4:9",
                      "valueSize": 1
                    }
                  ],
                  "id": 1965,
                  "nodeType": "InlineAssembly",
                  "src": "1515:93:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1970,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "1650:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1971,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "1658:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1967,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1900,
                            "src": "1633:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1966,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3412,
                          "src": "1618:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3412_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        },
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1618:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PocketSwapPair_$3412",
                          "typeString": "contract PocketSwapPair"
                        }
                      },
                      "id": 1969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2318,
                      "src": "1618:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1973,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:47:9"
                },
                {
                  "expression": {
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1974,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1846,
                          "src": "1675:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1977,
                        "indexExpression": {
                          "id": 1975,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1910,
                          "src": "1683:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1675:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1978,
                      "indexExpression": {
                        "id": 1976,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "1691:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1675:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1979,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1900,
                      "src": "1701:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1675:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1981,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:30:9"
                },
                {
                  "expression": {
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1982,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1846,
                          "src": "1715:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1985,
                        "indexExpression": {
                          "id": 1983,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1912,
                          "src": "1723:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1715:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1986,
                      "indexExpression": {
                        "id": 1984,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "1731:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1715:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1987,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1900,
                      "src": "1741:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1715:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1993,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1900,
                        "src": "1814:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1990,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1850,
                        "src": "1800:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1800:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1995,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:19:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1997,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1900,
                          "src": "1838:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2002,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1881:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2104",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2104",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                ],
                                "id": 2001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1873:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2000,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1873:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1873:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2004,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "1888:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2005,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1912,
                              "src": "1896:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1998,
                              "name": "PairAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4847,
                              "src": "1846:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PairAddress_$4847_$",
                                "typeString": "type(library PairAddress)"
                              }
                            },
                            "id": 1999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4846,
                            "src": "1846:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address,address) pure returns (address)"
                            }
                          },
                          "id": 2006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1846:57:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1838:65:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57575a",
                        "id": 2008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        },
                        "value": "WWZ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        }
                      ],
                      "id": 1996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1830:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:81:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2010,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:81:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2012,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1900,
                          "src": "1929:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2017,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1972:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2104",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2104",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                ],
                                "id": 2016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1964:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2015,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1964:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1964:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2019,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1912,
                              "src": "1979:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2020,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "1987:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2013,
                              "name": "PairAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4847,
                              "src": "1937:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PairAddress_$4847_$",
                                "typeString": "type(library PairAddress)"
                              }
                            },
                            "id": 2014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4846,
                            "src": "1937:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address,address) pure returns (address)"
                            }
                          },
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1937:57:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1929:65:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57575a",
                        "id": 2023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1996:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        },
                        "value": "WWZ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        }
                      ],
                      "id": 2011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:81:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2025,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:81:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2027,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "2030:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2028,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "2038:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2029,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1900,
                        "src": "2046:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2030,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1850,
                          "src": "2052:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2052:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2026,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4048,
                      "src": "2018:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 2032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2033,
                  "nodeType": "EmitStatement",
                  "src": "2013:55:9"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 2035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "941:10:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1898,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "993:8:9"
            },
            "parameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1894,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "960:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "952:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1896,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "976:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "968:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:32:9"
            },
            "returnParameters": {
              "id": 1901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1900,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "1019:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "1011:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:14:9"
            },
            "scope": 2104,
            "src": "932:1143:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4038
            ],
            "body": {
              "id": 2065,
              "nodeType": "Block",
              "src": "2129:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2042,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2147:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2147:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2044,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1832,
                          "src": "2161:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2147:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2172:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 2041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2139:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2139:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "2139:56:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2050,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2037,
                          "src": "2213:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 2051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2220:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "2213:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4249475f464545",
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2226:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        },
                        "value": "PocketSwap:BIG_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        }
                      ],
                      "id": 2049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2205:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2055,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:42:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2057,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "2274:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2058,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "2279:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2056,
                      "name": "FeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "2263:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2263:21:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2060,
                  "nodeType": "EmitStatement",
                  "src": "2258:26:9"
                },
                {
                  "expression": {
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2061,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1836,
                      "src": "2294:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2062,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2037,
                      "src": "2300:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2294:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2064,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:10:9"
                }
              ]
            },
            "functionSelector": "69fe0e2d",
            "id": 2066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFee",
            "nameLocation": "2090:6:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2039,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2120:8:9"
            },
            "parameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "2105:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2066,
                  "src": "2097:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2096:14:9"
            },
            "returnParameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2129:0:9"
            },
            "scope": 2104,
            "src": "2081:230:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4088
            ],
            "body": {
              "id": 2089,
              "nodeType": "Block",
              "src": "2377:160:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2073,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2395:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2395:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2075,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1832,
                          "src": "2409:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2395:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2420:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 2072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2387:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2387:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:56:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2081,
                        "name": "feeSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1832,
                        "src": "2476:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2082,
                        "name": "_feeSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2068,
                        "src": "2487:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2080,
                      "name": "FeeSetterUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4018,
                      "src": "2459:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2459:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2084,
                  "nodeType": "EmitStatement",
                  "src": "2454:44:9"
                },
                {
                  "expression": {
                    "id": 2087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2085,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1832,
                      "src": "2508:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2086,
                      "name": "_feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2068,
                      "src": "2520:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2508:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2088,
                  "nodeType": "ExpressionStatement",
                  "src": "2508:22:9"
                }
              ]
            },
            "functionSelector": "b19805af",
            "id": 2090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeSetter",
            "nameLocation": "2326:12:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2070,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2368:8:9"
            },
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2068,
                  "mutability": "mutable",
                  "name": "_feeSetter",
                  "nameLocation": "2347:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "2339:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2338:20:9"
            },
            "returnParameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2377:0:9"
            },
            "scope": 2104,
            "src": "2317:220:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4028
            ],
            "body": {
              "id": 2102,
              "nodeType": "Block",
              "src": "2605:83:9",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2096,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "2622:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 2097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2628:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "2622:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3330",
                      "id": 2099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2632:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_30_by_1",
                        "typeString": "int_const 30"
                      },
                      "value": "30"
                    },
                    "src": "2622:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2095,
                  "id": 2101,
                  "nodeType": "Return",
                  "src": "2615:19:9"
                }
              ]
            },
            "functionSelector": "46870d2b",
            "id": 2103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "holdersFee",
            "nameLocation": "2552:10:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2092,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2579:8:9"
            },
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2562:2:9"
            },
            "returnParameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2094,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "2596:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2595:9:9"
            },
            "scope": 2104,
            "src": "2543:145:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2105,
        "src": "181:2509:9",
        "usedErrors": []
      }
    ],
    "src": "39:2652:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x84e85745B27548AC029DC2c3D71FcCb39bF95719",
      "transactionHash": "0xbe5e010c779a1bbfb38fe4427d29cd36aaa7c8aa290007000dd7cc38f686333d"
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x0a2eB957FD1C62151240D0Fc01191a73C97931E7",
      "transactionHash": "0x06fb70e94b805c8429a5bf29c774b4a7ecdf0ab845ecf8954d3ca984f4e13280"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-05-31T08:09:13.763Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}